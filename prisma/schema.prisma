generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid()) @map("_id")
  email    String  @unique
  password String?
  phone_no String?
  Team     Team?   @relation(fields: [teamId], references: [id])
  teamId   String?

  verification_token     String?
  wrong_password_attempt Float?
  lockout_time           DateTime?
  is_locked              Boolean   @default(false)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  // Use the same relation names in the User model
  assigneeAssets  Assets[] @relation(name: "AssigneeAssets") // Assets where the user is the assignee
  createdByAssets Assets[] @relation(name: "CreatedByAssets") // Assets created by the user
}

model Team {
  id          String  @id @default(uuid()) @map("_id")
  name        String
  description String?
  members     User[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Assets {
  id          String  @id @default(uuid()) @map("_id")
  name        String
  description String?

  assignee_id String?
  assignee    User?   @relation(name: "AssigneeAssets", fields: [assignee_id], references: [id]) // Named relation for assignee

  status_id String?
  status    AssetStatus? @relation(fields: [status_id], references: [id])

  asset_type_id String?
  asseType      AssetType? @relation(name: "AssetTypes", fields: [asset_type_id], references: [id])

  createdById String
  createdBy   User   @relation(name: "CreatedByAssets", fields: [createdById], references: [id]) // Named relation for createdBy

  attachments String[]

  assetHistory AssetHistory[] @relation(name: "AssetHistory")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model AssetHistory {
  id String @id @default(uuid()) @map("_id")

  title       String
  description String?
  status_id   String
  assignee_id String

  asset_id String
  history  Assets @relation(name: "AssetHistory", fields: [asset_id], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model AssetStatus {
  id          String  @id @default(uuid()) @map("_id")
  name        String
  description String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  Assets    Assets[]
}

model AssetType {
  id          String  @id @default(uuid()) @map("_id")
  name        String
  description String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  assets    Assets[]  @relation(name: "AssetTypes")
}
